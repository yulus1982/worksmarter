{"ast":null,"code":"var _jsxFileName = \"/home/younes/Desktop/api/ai-content/src/components/generators/Generator.js\",\n  _s = $RefreshSig$();\nimport React, { useReducer } from 'react';\nimport { Container, Form, Button, Card, Row, Col } from 'react-bootstrap';\nimport { callAPI } from '../api/OpenAIAPI.js';\nimport CopyToClipboard from '../common/CopyToClipboard.js';\nimport LoadingSpinner from '../common/LoadingSpinner.js';\nimport useTypingEffect from '../../hooks/useTypingEffect.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  heading: 'AI Generated Response:',\n  response: '',\n  errorMessage: '',\n  dataLoaded: false,\n  isFormSubmitted: false\n};\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'SET_HEADING':\n      return {\n        ...state,\n        heading: action.payload\n      };\n    case 'SET_RESPONSE':\n      return {\n        ...state,\n        response: action.payload\n      };\n    case 'SET_ERROR_MESSAGE':\n      return {\n        ...state,\n        errorMessage: action.payload\n      };\n    case 'SET_DATA_LOADED':\n      return {\n        ...state,\n        dataLoaded: action.payload\n      };\n    case 'SET_IS_FORM_SUBMITTED':\n      return {\n        ...state,\n        isFormSubmitted: action.payload\n      };\n    default:\n      return state;\n  }\n}\nconst Generator = _ref => {\n  _s();\n  let {\n    generatorData\n  } = _ref;\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const typingSpeed = 50;\n  const responseWithTypingEffect = useTypingEffect(state.response, typingSpeed);\n  const onFormSubmit = async e => {\n    e.preventDefault();\n    const formData = new FormData(e.target);\n    const prompt = `${generatorData.prompt}${formData.get(generatorData.formName)}`;\n    dispatch({\n      type: 'SET_HEADING',\n      payload: `Thinking about your ${generatorData.title} now...`\n    });\n    dispatch({\n      type: 'SET_RESPONSE',\n      payload: ''\n    });\n    dispatch({\n      type: 'SET_ERROR_MESSAGE',\n      payload: ''\n    });\n    dispatch({\n      type: 'SET_IS_FORM_SUBMITTED',\n      payload: true\n    });\n    dispatch({\n      type: 'SET_DATA_LOADED',\n      payload: false\n    });\n    try {\n      const data = await callAPI(prompt, {\n        temperature: generatorData.temperature,\n        max_tokens: generatorData.max_tokens,\n        top_p: generatorData.top_p,\n        frequency_penalty: generatorData.frequency_penalty,\n        presence_penalty: generatorData.presence_penalty\n      });\n      if (data.error) {\n        dispatch({\n          type: 'SET_ERROR_MESSAGE',\n          payload: data.message\n        });\n      } else {\n        dispatch({\n          type: 'SET_HEADING',\n          payload: `Your AI Generated ${generatorData.title}:`\n        });\n        dispatch({\n          type: 'SET_RESPONSE',\n          payload: data\n        });\n      }\n    } catch (error) {\n      console.error(\"Error:\", error);\n    } finally {\n      dispatch({\n        type: 'SET_DATA_LOADED',\n        payload: true\n      });\n    }\n  };\n  const {\n    title,\n    description2,\n    formLabel,\n    formName,\n    placeholder\n  } = generatorData;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"main\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          xs: 6,\n          md: 4,\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"pageDescription\",\n            children: description2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form, {\n            onSubmit: onFormSubmit,\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"textArea\",\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: formLabel\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                as: \"textarea\",\n                name: formName,\n                placeholder: placeholder\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              size: \"md\",\n              type: \"submit\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 12,\n          md: 8,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: \"text-center\",\n            children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n              children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: state.heading\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: state.errorMessage ? /*#__PURE__*/_jsxDEV(\"p\", {\n                variant: \"danger\",\n                className: \"mt-3\",\n                children: state.errorMessage\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 23\n              }, this) : state.dataLoaded && state.response ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"response-container\",\n                children: [/*#__PURE__*/_jsxDEV(Card.Text, {\n                  as: \"div\",\n                  className: \"pre-wrap\",\n                  children: responseWithTypingEffect\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 27\n                }, this), state.response && /*#__PURE__*/_jsxDEV(CopyToClipboard, {\n                  text: state.response\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 46\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 25\n              }, this) : !state.isFormSubmitted ? /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: [\"The Response from the AI for your \", title, \" will show here.\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 27\n              }, this) : /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 27\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_s(Generator, \"K+dvEEXwUkFuo3CP7UwjH/oD68A=\", false, function () {\n  return [useTypingEffect];\n});\n_c = Generator;\nexport default Generator;\nvar _c;\n$RefreshReg$(_c, \"Generator\");","map":{"version":3,"names":["React","useReducer","Container","Form","Button","Card","Row","Col","callAPI","CopyToClipboard","LoadingSpinner","useTypingEffect","jsxDEV","_jsxDEV","initialState","heading","response","errorMessage","dataLoaded","isFormSubmitted","reducer","state","action","type","payload","Generator","_ref","_s","generatorData","dispatch","typingSpeed","responseWithTypingEffect","onFormSubmit","e","preventDefault","formData","FormData","target","prompt","get","formName","title","data","temperature","max_tokens","top_p","frequency_penalty","presence_penalty","error","message","console","description2","formLabel","placeholder","id","children","xs","md","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","Group","controlId","className","Label","Control","as","name","variant","size","Header","Body","Text","text","_c","$RefreshReg$"],"sources":["/home/younes/Desktop/api/ai-content/src/components/generators/Generator.js"],"sourcesContent":["import React, { useReducer } from 'react'\nimport { Container, Form, Button, Card, Row, Col } from 'react-bootstrap'\nimport { callAPI } from '../api/OpenAIAPI.js';\n\nimport CopyToClipboard from '../common/CopyToClipboard.js';\nimport LoadingSpinner from '../common/LoadingSpinner.js';\nimport useTypingEffect from '../../hooks/useTypingEffect.js';\n\n\nconst initialState = {\n  heading: 'AI Generated Response:',\n  response: '',\n  errorMessage: '',\n  dataLoaded: false,\n  isFormSubmitted: false,\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'SET_HEADING':\n      return { ...state, heading: action.payload };\n    case 'SET_RESPONSE':\n      return { ...state, response: action.payload };\n    case 'SET_ERROR_MESSAGE':\n      return { ...state, errorMessage: action.payload };\n    case 'SET_DATA_LOADED':\n      return { ...state, dataLoaded: action.payload };\n    case 'SET_IS_FORM_SUBMITTED':\n      return { ...state, isFormSubmitted: action.payload };\n    default:\n      return state;\n  }\n}\n\nconst Generator = ({ generatorData }) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const typingSpeed = 50;\n  const responseWithTypingEffect = useTypingEffect(state.response, typingSpeed);\n\n  const onFormSubmit = async (e) => {\n    e.preventDefault();\n\n    const formData = new FormData(e.target);\n    const prompt = `${generatorData.prompt}${formData.get(generatorData.formName)}`;\n\n    dispatch({ type: 'SET_HEADING', payload: `Thinking about your ${generatorData.title} now...` });\n    dispatch({ type: 'SET_RESPONSE', payload: '' });\n    dispatch({ type: 'SET_ERROR_MESSAGE', payload: '' });\n    dispatch({ type: 'SET_IS_FORM_SUBMITTED', payload: true });\n    dispatch({ type: 'SET_DATA_LOADED', payload: false });\n\n    try {\n      const data = await callAPI(prompt, {\n        temperature: generatorData.temperature,\n        max_tokens: generatorData.max_tokens,\n        top_p: generatorData.top_p,\n        frequency_penalty: generatorData.frequency_penalty,\n        presence_penalty: generatorData.presence_penalty,\n      });\n\n      if (data.error) {\n        dispatch({ type: 'SET_ERROR_MESSAGE', payload: data.message });\n      } else {\n        dispatch({ type: 'SET_HEADING', payload: `Your AI Generated ${generatorData.title}:` });\n        dispatch({ type: 'SET_RESPONSE', payload: data });\n      }\n    } catch (error) {\n      console.error(\"Error:\", error);\n    } finally {\n      dispatch({ type: 'SET_DATA_LOADED', payload: true });\n    }\n  };\n\n\n  const { title, description2, formLabel, formName, placeholder } = generatorData;\n\n  return (\n    <div id=\"main\">\n      <Container>\n        <Row>\n          <Col xs={6} md={4}>\n            <h1>{title}</h1>\n            <p id=\"pageDescription\">{description2}</p>\n            <Form onSubmit={onFormSubmit}>\n              <Form.Group controlId=\"textArea\" className=\"mb-3\">\n                <Form.Label>{formLabel}</Form.Label>\n                <Form.Control as=\"textarea\" name={formName} placeholder={placeholder} />\n              </Form.Group>\n              <Button variant=\"primary\" size=\"md\" type=\"submit\">\n                Submit\n              </Button>\n            </Form>\n          </Col>\n\n          <Col xs={12} md={8}>\n            <Card className=\"text-center\">\n              <Card.Header>\n                <h2>{state.heading}</h2>\n              </Card.Header>\n              <Card.Body>\n                {\n                  state.errorMessage ?\n                    (\n                      <p variant=\"danger\" className=\"mt-3\">{state.errorMessage}</p>\n                    )\n                    : state.dataLoaded && state.response ?\n                      (\n                        <div className=\"response-container\">\n                          <Card.Text as=\"div\" className=\"pre-wrap\">\n                            {responseWithTypingEffect}\n                          </Card.Text>\n                          {state.response && <CopyToClipboard text={state.response} />}\n                        </div>\n                      )\n                      : !state.isFormSubmitted ?\n                        (\n                          <Card.Text>\n                            The Response from the AI for your {title} will show here.\n                          </Card.Text>\n                        )\n                        :\n                        (\n                          <LoadingSpinner />\n                        )}\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n};\n\nexport default Generator;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}