{"ast":null,"code":"var _jsxFileName = \"/home/younes/Desktop/api/ai-content/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport 'react-bootstrap/dist/react-bootstrap.min.js';\nimport React, { useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport Navigation from './components/common/Navigation';\nimport Home from './components/pages/Home';\nimport Generators from './components/generators/Generators';\nimport Generator from './components/generators/Generator';\nimport { generatorList } from './data/generatorList';\nimport { ThemeContext } from './components/common/ThemeContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isDarkMode, setIsDarkMode] = useState(() => {\n    const storedTheme = localStorage.getItem('theme');\n    return storedTheme !== null ? JSON.parse(storedTheme) : true;\n  });\n  const toggleTheme = () => setIsDarkMode(!isDarkMode);\n  useEffect(() => {\n    localStorage.setItem('theme', JSON.stringify(isDarkMode));\n  }, [isDarkMode]);\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      isDarkMode,\n      toggleTheme\n    },\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `App ${isDarkMode ? 'dark-mode' : 'light-mode'}`,\n        children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            exact: true,\n            element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 44\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/generators\",\n            element: /*#__PURE__*/_jsxDEV(Generators, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 48\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this), generatorList.map(generator => /*#__PURE__*/_jsxDEV(Route, {\n            path: `/${generator.link}`,\n            element: /*#__PURE__*/_jsxDEV(Generator, {\n              generatorData: generator\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 26\n            }, this)\n          }, generator.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"4TlSt1fSj/1uQ74gdFp7pKsGDO0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","BrowserRouter","Router","Route","Routes","Navigation","Home","Generators","Generator","generatorList","ThemeContext","jsxDEV","_jsxDEV","App","_s","isDarkMode","setIsDarkMode","storedTheme","localStorage","getItem","JSON","parse","toggleTheme","setItem","stringify","Provider","value","children","className","fileName","_jsxFileName","lineNumber","columnNumber","path","exact","element","map","generator","link","generatorData","id","_c","$RefreshReg$"],"sources":["/home/younes/Desktop/api/ai-content/src/App.js"],"sourcesContent":["import './App.css';\nimport 'react-bootstrap/dist/react-bootstrap.min.js';\nimport React, { useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\n\nimport Navigation from './components/common/Navigation';\nimport Home from './components/pages/Home';\nimport Generators from './components/generators/Generators';\nimport Generator from './components/generators/Generator';\n\nimport { generatorList } from './data/generatorList';\nimport { ThemeContext } from './components/common/ThemeContext';\n\nfunction App() {\n  const [isDarkMode, setIsDarkMode] = useState(() => {\n    const storedTheme = localStorage.getItem('theme');\n    return storedTheme !== null ? JSON.parse(storedTheme) : true;\n  });\n  const toggleTheme = () => setIsDarkMode(!isDarkMode);\n\n  useEffect(() => {\n    localStorage.setItem('theme', JSON.stringify(isDarkMode));\n  }, [isDarkMode]);\n\n  return (\n    <ThemeContext.Provider value={{ isDarkMode, toggleTheme }}>\n      <Router>\n        <div className={`App ${isDarkMode ? 'dark-mode' : 'light-mode'}`}>\n          <Navigation />\n          <Routes>\n            <Route path=\"/\" exact element={<Home />} />\n            <Route path=\"/generators\" element={<Generators />} />\n            {generatorList.map((generator) => (\n              <Route\n                key={generator.id}\n                path={`/${generator.link}`}\n                element={<Generator generatorData={generator} />}\n              />\n            ))}\n          </Routes>\n        </div>\n      </Router>\n    </ThemeContext.Provider>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}